#!/bin/bash

# 当前版本
VERSION=1.0.0

# 密码存储目录
DIR_NAME=$HOME'/.siterm/'

usage() {
    echo "Usage:"
    echo "  ssh [-n connect_name] [-s secret_key] [-o operation] [-vh]"
    echo "Description:"
    echo "    connect_name : the global alias for this connection."
    echo "    secret_key   : Encrypted key for this connection."
    echo "    operation    : add,con or del"
    exit -1
}

while getopts ":n:s:o:v:h:" opt
do
    case $opt in
        n) CONNECT_NAME=$OPTARG ;;
        s) SECRET_KEY=$OPTARG ;;
        o) OPERATION=$OPTARG ;;
        v) echo $VERSION ;;
        h) usage ;;
        ?) usage ;;
    esac
done

# 指定连接名称
if [ ! -n "$CONNECT_NAME" ] ;then
    echo "Has not connect name!"
    exit 1
fi

# 指定密钥
if [ ! -n "$SECRET_KEY" ] ;then
    echo "Has not secret key!"
    exit 1
fi

# 操作
if [ ! -n "$OPERATION" ] ;then
    OPERATION="con"
fi

if [ ! -d "${DIR_NAME}" ]; then
    mkdir -p ${DIR_NAME}
fi

sinMd5() {
    if `command -v md5sum > /dev/null`; then
        # result=`echo -n "${1}" | /usr/local/bin/md5sum | cut -d ' ' -f1`
        result=`echo -n "${1}" | md5sum | cut -d ' ' -f1`
        #echo -n $SECRET_KEY | md5sum| tr a-z A-Z | awk '{print $1}'
    else
        result=''
        str=${1}
        while [ ${#result} -lt 32 ];do
            result=${result}`echo -n "${str}" | xxd -ps -c 250`
            str=$result
        done  
    fi
    echo $result
    return 0
}

FILE_NAME=`sinMd5 ${CONNECT_NAME}`".sin"
FULL_FILE="${DIR_NAME}${FILE_NAME}"

sinEncode() {
    # 加密密钥
    secret_hex=`sinMd5 ${SECRET_KEY}`
    secret_hex=`echo -n ${secret_hex}| tr a-z A-Z`
    secret=`echo "ibase=16; ${secret_hex}" | bc`

    # 加密账号密码
    host=`echo "${1}" |base64`
    port=`echo "${2}" |base64`
    user=`echo "${3}" |base64`
    pass=`echo "${4}" |base64`

    # 转16进制 添加-n 避免换行符转 0x0A
    hex=`echo -n "${host}@${port}@${user}@${pass}" | xxd -ps -u -c 5000`
    
    # 转10进制
    #info=`echo "ibase=16;obase=10;${hex}" | bc`
    info=`echo "ibase=16; ${hex}" | bc`

    # 密文与密钥相加
    result=`echo "ibase=10;obase=10;${secret}+${info}"|bc`
    
    echo "v${VERSION}v${result}"
    return 0
}

sinDecode() {
    content=$1
    # 加密密钥
    secret_hex=`sinMd5 ${SECRET_KEY}`
    secret_hex=`echo -n ${secret_hex}| tr a-z A-Z`
    secret=`echo "ibase=16; ${secret_hex}" | bc`

    private=`echo "ibase=10;obase=10; ${content}-${secret}"|bc`
    
    # decode
    base=`echo "ibase=10; obase=16; ${private}" | bc`
    base=`echo $base | xxd -ps -u -r`
    echo $base
    return 0
}

sinAddSSH() {

    if [ -f "${FULL_FILE}" ];then
        echo 'file already exist'
        exit 1
    fi

    host=""
    while [ ${#host} -eq 0 ]
    do
        echo -n " host: "
        read host
        done
   
    port=""
    while [ ${#port} -eq 0 ]
    do
        echo -n " port[22]: "
        read port
        if [ ${#port} -eq 0 ]; then
            port=22
        fi
        done
    user=""
    while [ ${#user} -eq 0 ]
    do
        echo -n " user[root]: "
        read user
        if [ ${#user} -eq 0 ]; then
            user='root'
        fi
        done

    password=""
    while [ ${#password} -eq 0 ]
    do
        stty -echo
        echo -n " password: "
        read password
        done
    stty echo
    echo ''
    
    result=`sinEncode $host $port $user $password`
    if [ $? != "0" ];then  
        echo "add fail."
        exit 1
    fi

    echo $result > $FULL_FILE

    exit 0;
}

sinConnectSSH() {
    if [ ! -f "${FULL_FILE}" ];then
        echo 'File dos not exist!'
        exit 1
    fi
    
    content=`cat ${FULL_FILE}`
    content=${content##*v}
    content=${content//' '/''}
    content=${content//'\'/''}

    base=`sinDecode ${content}`

    pass=`echo -n "${base}" | cut -d '@' -f4 | base64 -D`
    if [ -z "$pass" ]; then 
        echo "Has Not Password"
        exit 1
    fi
    user=`echo -n "${base}" | cut -d '@' -f3| base64 -D`
    port=`echo -n "${base}" | cut -d '@' -f2| base64 -D`
    host=`echo -n "${base}" | cut -d '@' -f1| base64 -D`

    export SIN_HOST=$host && export SIN_PORT=$port && export SIN_USER=$user && export SIN_PASS=$pass
    cd $(cd $(dirname $0); pwd) && expect -f ./exp
}

if [ "$OPERATION" == "add" ]; then
    sinAddSSH
elif [ "$OPERATION" == "del" ]; then
    echo '1'
elif [ "$OPERATION" == "con" ]; then
    sinConnectSSH
else
    echo "what?";
fi
exit 0